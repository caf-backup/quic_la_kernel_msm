#include "qcom-ipq8064-v1.0.dtsi"

/ {
	model = "Qualcomm IPQ8064/AP148";
	compatible = "qcom,ipq8064-ap148", "qcom,ipq8064";

	aliases {
		serial0 = &uart4;
	};

	chosen {
		stdout-path = "serial0:115200n8";
	};

	memory@0 {
		reg = <0x42000000 0x1e000000>;
		device_type = "memory";
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;
		rsvd@41200000 {
			reg = <0x41200000 0x300000>;
			no-map;
		};
	};

	soc {
		pinmux@800000 {
			i2c4_pins: i2c4_pinmux {
				pins = "gpio12", "gpio13";
				function = "gsbi4";
				bias-disable;
			};

			spi_pins: spi_pins {
				mux {
					pins = "gpio18", "gpio19", "gpio21";
					function = "gsbi5";
					drive-strength = <10>;
					bias-none;
				};
			};
		};

		gsbi@16300000 {
			qcom,mode = <GSBI_PROT_I2C_UART>;
			status = "ok";
			serial@16340000 {
				status = "ok";
			};
			/*
			 * The i2c device on gsbi4 should not be enabled.
			 * On ipq806x designs gsbi4 i2c is meant for exclusive
			 * RPM usage. Turning this on in kernel manifests as
			 * i2c failure for the RPM.
			 */
		};

		gsbi5: gsbi@1a200000 {
			qcom,mode = <GSBI_PROT_SPI>;
			status = "ok";

			spi4: spi@1a280000 {
				status = "ok";
				spi-max-frequency = <50000000>;

				pinctrl-0 = <&spi_pins>;
				pinctrl-names = "default";

				cs-gpios = <&qcom_pinmux 20 0>;

				flash: m25p80@0 {
					compatible = "s25fl256s1";
					#address-cells = <1>;
					#size-cells = <1>;
					spi-max-frequency = <50000000>;
					reg = <0>;

					linux,part-probe = "qcom-smem";
				};
			};
		};

		sata-phy@1b400000 {
			status = "ok";
		};

		sata@29000000 {
			status = "ok";
		};

		pcie0: pci@1b500000 {
			status = "ok";
			phy-tx0-term-offset = <7>;
		};

		pcie1: pci@1b700000 {
			status = "ok";
			phy-tx0-term-offset = <7>;
		};
	};
};
