/* Copyright (c) 2015-2016, The Linux Foundation. All rights reserved.
 *
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 */

#include <dt-bindings/interrupt-controller/arm-gic.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	model = "Qualcomm Atheros IPQ8062/AP145-1XX";
	compatible = "qcom,ipq8062-ap145_1xx", "qcom,ipq8062";

	aliases {
		serial0 = &uart4;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;
		rsvd@41200000 {
			reg = <0x41200000 0x300000>;
			no-map;
		};
	};

	cpus {
		#address-cells = <1>;
		#size-cells = <0>;

		cpu@0 {
			compatible = "qcom,krait";
			enable-method = "qcom,kpss-acc-v1";
			device_type = "cpu";

			operating-points-0-0 = <
				/* kHz      uV */
				1000000 1100000
				800000  1050000
				600000  1000000
				384000  950000
			>;
			operating-points-0-1 = <
				/* kHz      uV */
				1000000 1050000
				800000  1000000
				600000  950000
				384000  900000
			>;
			operating-points-0-2 = <
				/* kHz      uV */
				1000000 1000000
				800000  950000
				600000  900000
				384000  850000
			>;
			operating-points-0-3 = <
				/* kHz      uV */
				1000000  950000
				800000   900000
				600000   850000
				384000   800000
			>;

			clock-latency = <100000>;
			voltage-tolerance = <5>;

			cooling-min-state = <0>;
			cooling-max-state = <10>;
			#cooling-cells = <2>;
		};

		cpu@1 {
			compatible = "qcom,krait";
			enable-method = "qcom,kpss-acc-v1";
			device_type = "cpu";
			reg = <1>;
			qcom,acc = <&acc1>;
			qcom,saw = <&saw1>;
			core-supply = <&smb208_s2b>;
			clocks = <&kraitcc 1>;
			clock-names = "cpu";

			operating-points-0-0 = <
				/* kHz      uV */
				1000000 1100000
				800000  1050000
				600000  1000000
				384000  950000
			>;
			operating-points-0-1 = <
				/* kHz      uV */
				1000000 1050000
				800000  1000000
				600000  950000
				384000  900000
			>;
			operating-points-0-2 = <
				/* kHz      uV */
				1000000 1000000
				800000  950000
				600000  900000
				384000  850000
			>;
			operating-points-0-3 = <
				/* kHz      uV */
				1000000  950000
				800000   900000
				600000   850000
				384000   800000
			>;

			clock-latency = <100000>;

			cooling-min-state = <0>;
			cooling-max-state = <10>;
			#cooling-cells = <2>;
		};

		L2: l2-cache {
			compatible = "cache";
			cache-level = <2>;
			clocks = <&kraitcc 4>;
			clock-names = "cache";
			vdd_dig-supply = <&smb208_s1a>;
			cache-points-kHz = <
				/* kHz    uV    CPU kHz */
				1000000 1100000  600000
				384000  1100000  384000
			>;
		};

	};

	soc {
		pinmux@800000 {
			sdcc1_pins: sdcc1_pinmux {
				mux {
					pins = "gpio38", "gpio39", "gpio40",
					"gpio41", "gpio42", "gpio43",
					"gpio44", "gpio45", "gpio46",
					"gpio47";
					function = "sdc1";
				};
				cmd {
					pins = "gpio45";
					drive-strength = <10>;
					bias-pull-up;
				};
				data {
					pins = "gpio38", "gpio39", "gpio40",
					"gpio41", "gpio43", "gpio44",
					"gpio46", "gpio47";
					drive-strength = <10>;
					bias-pull-up;
				};
				clk {
					pins = "gpio42";
					drive-strength = <16>;
					bias-pull-down;
				};
			};

			i2c4_pins: i2c4_pinmux {
				pins = "gpio12", "gpio13";
				function = "gsbi4";
				bias-disable;
			};

			spi_pins: spi_pins {
				mux {
					pins = "gpio18", "gpio19", "gpio21";
					function = "gsbi5";
					drive-strength = <10>;
					bias-none;
				};
				cs {
					pins = "gpio20";
					drive-strength = <12>;
				};
			};
			nand_pins: nand_pins {
				mux {
					pins = "gpio34", "gpio35", "gpio36",
					       "gpio37", "gpio38", "gpio39",
					       "gpio40", "gpio41", "gpio42",
					       "gpio43", "gpio44", "gpio45",
					       "gpio46", "gpio47";
					function = "nand";
					drive-strength = <10>;
					bias-disable;
				};
				pullups {
					pins = "gpio39";
					bias-pull-up;
				};
				hold {
					pins = "gpio40", "gpio41", "gpio42",
						"gpio43", "gpio44", "gpio45",
						"gpio46", "gpio47";
					bias-bus-hold;
				};
			};
		};

		gsbi@16300000 {
			qcom,mode = <GSBI_PROT_I2C_UART>;
			status = "ok";
			serial@16340000 {
				status = "ok";
			};

			i2c4: i2c@16380000 {
				status = "ok";

				clock-frequency = <200000>;

				pinctrl-0 = <&i2c4_pins>;
				pinctrl-names = "default";
			};
		};

		gsbi5: gsbi@1a200000 {
			qcom,mode = <GSBI_PROT_SPI>;
			status = "ok";

			spi4: spi@1a280000 {
				status = "ok";
				spi-max-frequency = <50000000>;

				pinctrl-0 = <&spi_pins>;
				pinctrl-names = "default";

				cs-gpios = <&qcom_pinmux 20 0>;

				dmas = <&adm_dma 6 9>,
					<&adm_dma 5 10>;
				dma-names = "rx", "tx";

				flash: m25p80@0 {
					compatible = "s25fl256s1";
					#address-cells = <1>;
					#size-cells = <1>;
					spi-max-frequency = <50000000>;
					reg = <0>;
					m25p,fast-read;
				};
			};
		};

		sata-phy@1b400000 {
			status = "ok";
		};

		sata@29000000 {
			ports-implemented = <0x1>;
			status = "ok";
		};

		pci@1b500000 {
			status = "ok";
		};

		pci@1b700000 {
			status = "ok";
		};

		dma@18300000 {
			status = "ok";
		};

		phy@100f8800 {		/* USB3 port 1 HS phy */
			status = "ok";
		};

		phy@100f8830 {		/* USB3 port 1 SS phy */
			status = "ok";
		};

		phy@110f8800 {		/* USB3 port 0 HS phy */
			status = "ok";
		};

		phy@110f8830 {		/* USB3 port 0 SS phy */
			status = "ok";
		};

		usb30@0 {
			status = "ok";
		};

		usb30@1 {
			status = "ok";
		};

		gpio_keys {
			compatible = "gpio-keys";

			button@1 {
				label = "wps";
				linux,code = <KEY_WPS_BUTTON>;
				gpios = <&qcom_pinmux 22 GPIO_ACTIVE_LOW>;
				linux,input-type = <1>;
				debounce-interval = <60>;
			};
		};

		amba {
			/* eMMC */
			sdcc1: sdcc@12400000 {
				status = "ok";
				pinctrl-0 = <&sdcc1_pins>;
				pinctrl-names = "default";
			};
		};
	};
};
